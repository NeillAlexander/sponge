/**
 * Copyright (c) Neill Alexander. All rights reserved.
 * The use and distribution terms for this software are covered by the
 * Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)
 * which can be found in the file epl-v10.html at the root of this distribution.
 * By using this software in any fashion, you are agreeing to be bound by
 * the terms of this license.
 * You must not remove this notice, or any other, from this software
 */
package com.nwalex.sponge.gui;

import com.nwalex.sponge.gui.plugins.PluginController;
import java.awt.BorderLayout;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JFrame;
import org.apache.log4j.Logger;

/**
 *
 * @author neill
 */
public class SpongeGUI extends javax.swing.JFrame {

  private final SpongeGUIController controller;
  private HelpManager helper;
  private static final Logger log = Logger.getLogger(SpongeGUI.class);

  private Map<SpongeGUIController, SpongeSessionPanel> sessionMap =
          new HashMap<SpongeGUIController, SpongeSessionPanel>();

  /** Creates new form SpongeGUI */
  public SpongeGUI(final SpongeGUIController controller, final PluginController pluginController) {
    this.controller = controller;
    this.helper = new HelpManager(this);

    initComponents();

    setExtendedState(JFrame.MAXIMIZED_BOTH);

    sessionMap.put(controller, new SpongeSessionPanel(this, controller, pluginController));
    this.add(sessionMap.get(controller), BorderLayout.CENTER);
  }

  public void updateSelectedMode(final SpongeGUIController controller) {
    if (sessionMap.containsKey(controller)) {
      sessionMap.get(controller).updateSelectedMode(controller);
    } else {
      log.warn("updateSelectedMode called for " + controller + " but I don't have a reference to it!");
    }
  }

  public void setSessionInfo(String info) {
    if (sessionMap.containsKey(controller)) {
      sessionMap.get(controller).setSessionInfo(info);
    } else {
      log.warn("setSessionInfo called for " + controller + " but I don't have a reference to it!");
    }
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    menuBar = new javax.swing.JMenuBar();
    jMenu1 = new javax.swing.JMenu();
    serverMenu = new javax.swing.JMenu();
    replMenu = new javax.swing.JMenu();
    replMenuItem = new javax.swing.JMenuItem();
    replMenuItem.setAction(controller.getStartReplAction());
    jMenu2 = new javax.swing.JMenu();
    keyboardShortcutsHelp = new javax.swing.JMenuItem();
    jMenuItem1 = new javax.swing.JMenuItem();
    aboutMenuItem = new javax.swing.JMenuItem();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jMenu1.setText("File");
    menuBar.add(jMenu1);

    serverMenu.setText("Server");
    menuBar.add(serverMenu);

    replMenu.setText("REPL");

    replMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
    replMenuItem.setText("Start REPL");
    replMenu.add(replMenuItem);

    menuBar.add(replMenu);

    jMenu2.setText("Help");

    keyboardShortcutsHelp.setAction(helper.makeMenuAction("manual.html"));
    keyboardShortcutsHelp.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
    keyboardShortcutsHelp.setText("Manual");
    jMenu2.add(keyboardShortcutsHelp);

    jMenuItem1.setAction(helper.makeMenuAction("plugins.html"));
    jMenuItem1.setText("Writing Plugins");
    jMenu2.add(jMenuItem1);

    aboutMenuItem.setText("About");
    aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        aboutMenuItemActionPerformed(evt);
      }
    });
    jMenu2.add(aboutMenuItem);

    menuBar.add(jMenu2);

    setJMenuBar(menuBar);

    pack();
  }// </editor-fold>//GEN-END:initComponents

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
      AboutDialog ad = new AboutDialog(this, true);
      ad.setLocationRelativeTo(null);
      ad.setVisible(true);
    }//GEN-LAST:event_aboutMenuItemActionPerformed
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JMenuItem aboutMenuItem;
  private javax.swing.JMenu jMenu1;
  private javax.swing.JMenu jMenu2;
  private javax.swing.JMenuItem jMenuItem1;
  private javax.swing.JMenuItem keyboardShortcutsHelp;
  private javax.swing.JMenuBar menuBar;
  private javax.swing.JMenu replMenu;
  private javax.swing.JMenuItem replMenuItem;
  private javax.swing.JMenu serverMenu;
  // End of variables declaration//GEN-END:variables
}
