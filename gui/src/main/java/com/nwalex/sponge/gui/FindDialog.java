/**
 * Copyright (c) Neill Alexander. All rights reserved.
 * The use and distribution terms for this software are covered by the
 * Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)
 * which can be found in the file epl-v10.html at the root of this distribution.
 * By using this software in any fashion, you are agreeing to be bound by
 * the terms of this license.
 * You must not remove this notice, or any other, from this software
 */
package com.nwalex.sponge.gui;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.KeyStroke;

/**
 *
 * @author alexanc
 */
public class FindDialog extends javax.swing.JDialog {

  private final FindDialogController controller;

  /** Creates new form FindDialog */
  public FindDialog(FindDialogController controller, java.awt.Frame parent, boolean modal) {
    super(parent, modal);
    this.controller = controller;
    initComponents();

    // add some helper keys
    findTextField.getActionMap().put("OK_ACTION", new AbstractAction() {
      @Override
      public void actionPerformed(ActionEvent e) {
        findButtonActionPerformed(e);
      }
    });

    findTextField.getActionMap().put("CANCEL_ACTION", new AbstractAction() {
      @Override
      public void actionPerformed(ActionEvent e) {
        closeButtonActionPerformed(e);
      }
    });

    findTextField.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0),
            "OK_ACTION");

    findTextField.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0),
            "CANCEL_ACTION");
  }

  @Override
  public void setVisible(boolean visible) {
    if (visible) {
      findTextField.requestFocusInWindow();
    } else {
      findTextField.setText("");
    }

    super.setVisible(visible);
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jLabel1 = new javax.swing.JLabel();
    findTextField = new javax.swing.JTextField();
    closeButton = new javax.swing.JButton();
    findButton = new javax.swing.JButton();
    caseSensitiveBox = new javax.swing.JCheckBox();

    setTitle("Find");
    setResizable(false);

    jLabel1.setText("Find:");

    closeButton.setText("Close");
    closeButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        closeButtonActionPerformed(evt);
      }
    });

    findButton.setText("Find");
    findButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        findButtonActionPerformed(evt);
      }
    });

    caseSensitiveBox.setText("Case Sensitive");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addComponent(caseSensitiveBox)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 149, Short.MAX_VALUE)
            .addComponent(findButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(closeButton))
          .addComponent(findTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE))
        .addContainerGap())
    );

    layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {closeButton, findButton});

    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(findTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(closeButton)
          .addComponent(findButton)
          .addComponent(caseSensitiveBox))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void findButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findButtonActionPerformed
    controller.doFind(findTextField.getText(), caseSensitiveBox.isSelected());
  }//GEN-LAST:event_findButtonActionPerformed

  private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
    setVisible(false);
  }//GEN-LAST:event_closeButtonActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JCheckBox caseSensitiveBox;
  private javax.swing.JButton closeButton;
  private javax.swing.JButton findButton;
  private javax.swing.JTextField findTextField;
  private javax.swing.JLabel jLabel1;
  // End of variables declaration//GEN-END:variables
}
